openapi: 3.0.0
info:
  version: 1.0.0
  title: Sample Blog API
  description: A sample blog API to illustrate REST API concepts
servers:
  - url: http://localhost:3000
paths:
  /categories:
    get:
      description: Returns a list of categories
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of categories returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new category
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          description: Category has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /categories/{_id}:
    get:
      description: Returns the category with the given ID
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Category data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '404':
          description: Category with the give ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Update a category
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          description: Category has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Deletes a category
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Category has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          description: Category with this ID is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customers:
    get:
      description: Returns a list of customers
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of customers returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new customer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: Category has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customers/{_id}:
    get:
      description: Returns the Customer with the given ID
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Customer data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Customer with the given ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Update a customer
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: Category has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Deletes a customer
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Customer has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          description: Customer with this ID is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /bills:
    get:
      description: Returns a list of invoices
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of invoices returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new invoice
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
      responses:
        '201':
          description: Invoice has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /bills/{_id}:
    get:
      description: Returns the Invoice with the given ID
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Invoice data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '404':
          description: Invoice with the given ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Update an Invoice
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
      responses:
        '201':
          description: Invoice has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Deletes an Invoice
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Invoice has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          description: Invoice with this ID is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders:
    get:
      description: Returns a list of orders
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of orders returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new Order
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders/{_id}:
    get:
      description: Returns the Order with the given ID
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order with the given ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Update an Order
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Deletes an Order
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          description: Order with this ID is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders:
    get:
      description: Returns a list of orders
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of orders returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new Order
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders/{_id}:
    get:
      description: Returns the Order with the given ID
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order with the given ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Update an Order
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Deletes an Order
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          description: Order with this ID is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /products:
    get:
      description: Returns a list of services
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of services returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new Service
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Service has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /products/{_id}:
    get:
      description: Returns the Service with the given ID
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Service data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '404':
          description: Service with the given ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Update a Service
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      responses:
        '201':
          description: Service has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Deletes a Service
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Service has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          description: Service with this ID is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Category:
      type: object
      required:
        - id
        - name
        - description
      properties:
        id:
          type: number
        name:
          type: string
        description:
          type: string
    Customer:
      type: object
      required:
        - id
        - firstName
        - lastName
        - email
        - active
        - address
      properties:
        id:
          type: number
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        active:
          type: boolean
        address: 
          type: array
          items:
            $ref: '#/components/schemas/Address'
    Address:
      type: object
      required:
        - zip
        - country
        - city
        - street
        - notes
      properties:
        zip:
          type: number
        firstName:
          type: string
        country:
          type: string
        city:
          type: string
        street:
          type: string
        notes:
          type: string
    Invoice:
      type: object
      required:
        - id
        - orderID
        - amount
        - status
      properties:
        id:
          type: number
        orderID:
          type: number
        amount:
          type: number
        status:
          type: string
    Order:
      type: object
      required:
        - id
        - customerID
        - catID
        - productID
        - amount
        - quantity
        - status
      properties:
        id:
          type: number
        customerID:
          type: number
        catID:
          type: number
        productID:
          type: number
        amount:
          type: number
        quantity:
          type: number
        status:
          type: string
    Service:
      type: object
      required:
        - id
        - name
        - description
        - price
        - UOM
        - active
      properties:
        id:
          type: number
        name:
          type: string
        description:
          type: string
        price:
          type: number
        UOM:
          type: string
        active:
          type: boolean
    Error:
      type: object
      required:
        - message
        - has_error
      properties:
        message:
          type: string
        has_error:
          type: boolean